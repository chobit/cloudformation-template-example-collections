{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "CloudFormation template for Hazelcast",

  "Parameters" : {

    "KeyName": {
      "Description" : "Hazelcast service key name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "KeyPair name from 1 to 255 ASCII characters.",
      "Default": "platform-ssh-key"
    },
    "VpcId" : {
      "Description" : "The ID of the VPC to use.",
      "Type" : "String",
      "Default" : "vpc-b1b297d4"
    },

    "PrivateSubnet1" : {
        "Description": "Private subnet 1 ID",
        "Type": "String",
        "Default": "subnet-fc4bf7d7"
    },
    "PrivateSubnet2" : {
        "Description": "Private subnet 2 ID",
        "Type": "String",
        "Default": "subnet-66a8de11"
    },
    "InstanceType" : {
      "Description" : "Hazelcast node instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "cc2.8xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "cr1.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge"],
      "ConstraintDescription" : "Must be a valid Amazon EC2 instance type."
    },

    "SSHLocation" : {
      "Description" : "The range of IP addresses with access to SSH into the instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "HazelcastClusterName" : {
      "Description" : "The name of the Hazelcast cluster",
      "Type" : "String",
      "Default" : "hazelcast"
    },

    "ClusterSize" : {
      "Description" : "The number of Hazelcast instances to launch in the Auto Scaling group",
      "Type" : "Number",
      "Default" : "2"
    },

    "HazelcastVersion" : {
      "Description" : "The version number of Hazelcast used throughout the application",
      "Type" : "String",
      "Default" : "3.3.1",
      "AllowedValues" : ["3.1.7", "3.3.1"],
      "ConstraintDescription" : "Must be a supported version number."
    }

  },
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"     : { "Arch" : "64HVM" },
      "m3.medium"    : { "Arch" : "64HVM" },
      "m3.large"     : { "Arch" : "64HVM" },
      "m3.xlarge"    : { "Arch" : "64HVM" },
      "m3.2xlarge"   : { "Arch" : "64HVM" },
      "c3.large"     : { "Arch" : "64HVM" },
      "c3.xlarge"    : { "Arch" : "64HVM" },
      "c3.2xlarge"   : { "Arch" : "64HVM" },
      "c3.4xlarge"   : { "Arch" : "64HVM" },
      "c3.8xlarge"   : { "Arch" : "64HVM" }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "64HVM" : "ami-1ecae776" }
    }
  },

  "Resources" : {
    "HazelcastRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Version" : "2012-10-17",
          "Statement" : [ {
            "Effect" : "Allow",
            "Principal" : {
              "Service" : [ "ec2.amazonaws.com" ]
            },
            "Action" : [ "sts:AssumeRole" ]
          } ]
        },
        "Path" : "/"
      }
    },
    "HazelcastServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy" : {
        "AutoScalingRollingUpdate" : {
            "MaxBatchSize": "1",
            "MinInstancesInService" : "2"
         }
      },
      "Properties" : {
        "AvailabilityZones" : [
          "us-east-1a", "us-east-1b"
        ],
        "VPCZoneIdentifier" : [
            { "Ref": "PrivateSubnet1" },
            { "Ref": "PrivateSubnet2" }
        ],
        "LaunchConfigurationName" : { "Ref" : "HazelcastServer" },
        "MinSize" : "2",
        "MaxSize" : "4",
        "DesiredCapacity" : { "Ref" : "ClusterSize" },
        "Tags" : [ { 
            "Key" : "type", "Value" : "hazelcast", "PropagateAtLaunch" : "true" 
            }, {
            "Key" : "Name", "Value" : { "Ref" : "HazelcastClusterName" }, "PropagateAtLaunch" : "true"
            }, {
            "Key" : "project", "Value" : "cloudformation", "PropagateAtLaunch" : "true"
            }
         ]
      }
    },

    "HazelcastServer": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",

      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "commands" : {
              "createfile" : {
                "command" : { "Fn::Join" : ["", [
                  "echo \"",
                  "cloud.aws.region:\n",
                  " ", { "Ref" : "AWS::Region" }, "\n",
                  "discovery:\n",
                  " type: ec2\n",
                  "\n",
                  "discovery.ec2.groups: ", { "Ref" : "HazelcastSecurityGroup" }, "\n",
                  "discovery.ec2.tag.type: orientdb\n",
                  "\n",
                  "cloud.node.auto_attributes: true\n",
                  " \" > ",
                  "/usr/local/elasticsearch/elasticsearch-", { "Ref" : "HazelcastVersion"  }, "/config/elasticsearch.yml"
                ]]}
              }
            }
          }
        }
      },

      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "HazelcastSecurityGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Helper function\n",
          "function error_exit\n",
          "{\n",
          "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# Install application\n",
          "#/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r HazelcastServer ",
          "#    --region ", { "Ref" : "AWS::Region" }, "\n",

          "# Download Hazelcast tarball\n",
          "# wget https://s3.amazonaws.com/wmg-operations/ansible/hazelcast/hazelcast-3.3.1.tar.gz\n",

          "# Unzip and install Hazelcast\n",
          "#tar xfv hazelcast-3.3.1.tar.gz\n",
          "#mv hazelcast-3.3.1 /opt/hazelcast-3.3.1\n",

          "# All is well so signal success\n",
          "/opt/aws/bin/cfn-signal -e $? '", { "Ref" : "WaitHandle" }, "'\n"
        ]]}}
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "HazelcastServer",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "600"
      }
    },

    "HazelcastSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable Hazelcast access",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "5702", "ToPort" : "5702", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    }
  }
}
